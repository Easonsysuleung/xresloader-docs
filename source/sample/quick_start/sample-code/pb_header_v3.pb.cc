// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pb_header_v3.proto

#include "pb_header_v3.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace com {
namespace owent {
namespace xresloader {
namespace pb {
class xresloader_headerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<xresloader_header>
      _instance;
} _xresloader_header_default_instance_;
class xresloader_datablocksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<xresloader_datablocks>
      _instance;
} _xresloader_datablocks_default_instance_;
}  // namespace pb
}  // namespace xresloader
}  // namespace owent
}  // namespace com
namespace protobuf_pb_5fheader_5fv3_2eproto {
void InitDefaultsxresloader_headerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::com::owent::xresloader::pb::_xresloader_header_default_instance_;
    new (ptr) ::com::owent::xresloader::pb::xresloader_header();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::owent::xresloader::pb::xresloader_header::InitAsDefaultInstance();
}

void InitDefaultsxresloader_header() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsxresloader_headerImpl);
}

void InitDefaultsxresloader_datablocksImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pb_5fheader_5fv3_2eproto::InitDefaultsxresloader_header();
  {
    void* ptr = &::com::owent::xresloader::pb::_xresloader_datablocks_default_instance_;
    new (ptr) ::com::owent::xresloader::pb::xresloader_datablocks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com::owent::xresloader::pb::xresloader_datablocks::InitAsDefaultInstance();
}

void InitDefaultsxresloader_datablocks() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsxresloader_datablocksImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::owent::xresloader::pb::xresloader_header, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::owent::xresloader::pb::xresloader_header, xres_ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::owent::xresloader::pb::xresloader_header, data_ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::owent::xresloader::pb::xresloader_header, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::owent::xresloader::pb::xresloader_header, hash_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::owent::xresloader::pb::xresloader_datablocks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::owent::xresloader::pb::xresloader_datablocks, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::com::owent::xresloader::pb::xresloader_datablocks, data_block_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::owent::xresloader::pb::xresloader_header)},
  { 9, -1, sizeof(::com::owent::xresloader::pb::xresloader_datablocks)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::owent::xresloader::pb::_xresloader_header_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::com::owent::xresloader::pb::_xresloader_datablocks_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "pb_header_v3.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022pb_header_v3.proto\022\027com.owent.xresload"
      "er.pb\"Y\n\021xresloader_header\022\020\n\010xres_ver\030\001"
      " \001(\t\022\020\n\010data_ver\030\002 \001(\t\022\r\n\005count\030\003 \001(\r\022\021\n"
      "\thash_code\030\004 \001(\t\"g\n\025xresloader_datablock"
      "s\022:\n\006header\030\001 \001(\0132*.com.owent.xresloader"
      ".pb.xresloader_header\022\022\n\ndata_block\030\002 \003("
      "\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 249);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pb_header_v3.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_pb_5fheader_5fv3_2eproto
namespace com {
namespace owent {
namespace xresloader {
namespace pb {

// ===================================================================

void xresloader_header::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int xresloader_header::kXresVerFieldNumber;
const int xresloader_header::kDataVerFieldNumber;
const int xresloader_header::kCountFieldNumber;
const int xresloader_header::kHashCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

xresloader_header::xresloader_header()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pb_5fheader_5fv3_2eproto::InitDefaultsxresloader_header();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.owent.xresloader.pb.xresloader_header)
}
xresloader_header::xresloader_header(const xresloader_header& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  xres_ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xres_ver().size() > 0) {
    xres_ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xres_ver_);
  }
  data_ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_ver().size() > 0) {
    data_ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_ver_);
  }
  hash_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash_code().size() > 0) {
    hash_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_code_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:com.owent.xresloader.pb.xresloader_header)
}

void xresloader_header::SharedCtor() {
  xres_ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0u;
  _cached_size_ = 0;
}

xresloader_header::~xresloader_header() {
  // @@protoc_insertion_point(destructor:com.owent.xresloader.pb.xresloader_header)
  SharedDtor();
}

void xresloader_header::SharedDtor() {
  xres_ver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void xresloader_header::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* xresloader_header::descriptor() {
  ::protobuf_pb_5fheader_5fv3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pb_5fheader_5fv3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const xresloader_header& xresloader_header::default_instance() {
  ::protobuf_pb_5fheader_5fv3_2eproto::InitDefaultsxresloader_header();
  return *internal_default_instance();
}

xresloader_header* xresloader_header::New(::google::protobuf::Arena* arena) const {
  xresloader_header* n = new xresloader_header;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void xresloader_header::Clear() {
// @@protoc_insertion_point(message_clear_start:com.owent.xresloader.pb.xresloader_header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  xres_ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0u;
  _internal_metadata_.Clear();
}

bool xresloader_header::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.owent.xresloader.pb.xresloader_header)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string xres_ver = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xres_ver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xres_ver().data(), static_cast<int>(this->xres_ver().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.owent.xresloader.pb.xresloader_header.xres_ver"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_ver = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_ver()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_ver().data(), static_cast<int>(this->data_ver().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.owent.xresloader.pb.xresloader_header.data_ver"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hash_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hash_code().data(), static_cast<int>(this->hash_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "com.owent.xresloader.pb.xresloader_header.hash_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.owent.xresloader.pb.xresloader_header)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.owent.xresloader.pb.xresloader_header)
  return false;
#undef DO_
}

void xresloader_header::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.owent.xresloader.pb.xresloader_header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string xres_ver = 1;
  if (this->xres_ver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xres_ver().data(), static_cast<int>(this->xres_ver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.owent.xresloader.pb.xresloader_header.xres_ver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->xres_ver(), output);
  }

  // string data_ver = 2;
  if (this->data_ver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_ver().data(), static_cast<int>(this->data_ver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.owent.xresloader.pb.xresloader_header.data_ver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->data_ver(), output);
  }

  // uint32 count = 3;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count(), output);
  }

  // string hash_code = 4;
  if (this->hash_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_code().data(), static_cast<int>(this->hash_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.owent.xresloader.pb.xresloader_header.hash_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->hash_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.owent.xresloader.pb.xresloader_header)
}

::google::protobuf::uint8* xresloader_header::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.owent.xresloader.pb.xresloader_header)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string xres_ver = 1;
  if (this->xres_ver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xres_ver().data(), static_cast<int>(this->xres_ver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.owent.xresloader.pb.xresloader_header.xres_ver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->xres_ver(), target);
  }

  // string data_ver = 2;
  if (this->data_ver().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_ver().data(), static_cast<int>(this->data_ver().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.owent.xresloader.pb.xresloader_header.data_ver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->data_ver(), target);
  }

  // uint32 count = 3;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count(), target);
  }

  // string hash_code = 4;
  if (this->hash_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hash_code().data(), static_cast<int>(this->hash_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "com.owent.xresloader.pb.xresloader_header.hash_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->hash_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.owent.xresloader.pb.xresloader_header)
  return target;
}

size_t xresloader_header::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.owent.xresloader.pb.xresloader_header)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string xres_ver = 1;
  if (this->xres_ver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xres_ver());
  }

  // string data_ver = 2;
  if (this->data_ver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_ver());
  }

  // string hash_code = 4;
  if (this->hash_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash_code());
  }

  // uint32 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void xresloader_header::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.owent.xresloader.pb.xresloader_header)
  GOOGLE_DCHECK_NE(&from, this);
  const xresloader_header* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const xresloader_header>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.owent.xresloader.pb.xresloader_header)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.owent.xresloader.pb.xresloader_header)
    MergeFrom(*source);
  }
}

void xresloader_header::MergeFrom(const xresloader_header& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.owent.xresloader.pb.xresloader_header)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.xres_ver().size() > 0) {

    xres_ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xres_ver_);
  }
  if (from.data_ver().size() > 0) {

    data_ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_ver_);
  }
  if (from.hash_code().size() > 0) {

    hash_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_code_);
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void xresloader_header::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.owent.xresloader.pb.xresloader_header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void xresloader_header::CopyFrom(const xresloader_header& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.owent.xresloader.pb.xresloader_header)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool xresloader_header::IsInitialized() const {
  return true;
}

void xresloader_header::Swap(xresloader_header* other) {
  if (other == this) return;
  InternalSwap(other);
}
void xresloader_header::InternalSwap(xresloader_header* other) {
  using std::swap;
  xres_ver_.Swap(&other->xres_ver_);
  data_ver_.Swap(&other->data_ver_);
  hash_code_.Swap(&other->hash_code_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata xresloader_header::GetMetadata() const {
  protobuf_pb_5fheader_5fv3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pb_5fheader_5fv3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void xresloader_datablocks::InitAsDefaultInstance() {
  ::com::owent::xresloader::pb::_xresloader_datablocks_default_instance_._instance.get_mutable()->header_ = const_cast< ::com::owent::xresloader::pb::xresloader_header*>(
      ::com::owent::xresloader::pb::xresloader_header::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int xresloader_datablocks::kHeaderFieldNumber;
const int xresloader_datablocks::kDataBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

xresloader_datablocks::xresloader_datablocks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pb_5fheader_5fv3_2eproto::InitDefaultsxresloader_datablocks();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.owent.xresloader.pb.xresloader_datablocks)
}
xresloader_datablocks::xresloader_datablocks(const xresloader_datablocks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_block_(from.data_block_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::com::owent::xresloader::pb::xresloader_header(*from.header_);
  } else {
    header_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.owent.xresloader.pb.xresloader_datablocks)
}

void xresloader_datablocks::SharedCtor() {
  header_ = NULL;
  _cached_size_ = 0;
}

xresloader_datablocks::~xresloader_datablocks() {
  // @@protoc_insertion_point(destructor:com.owent.xresloader.pb.xresloader_datablocks)
  SharedDtor();
}

void xresloader_datablocks::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void xresloader_datablocks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* xresloader_datablocks::descriptor() {
  ::protobuf_pb_5fheader_5fv3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pb_5fheader_5fv3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const xresloader_datablocks& xresloader_datablocks::default_instance() {
  ::protobuf_pb_5fheader_5fv3_2eproto::InitDefaultsxresloader_datablocks();
  return *internal_default_instance();
}

xresloader_datablocks* xresloader_datablocks::New(::google::protobuf::Arena* arena) const {
  xresloader_datablocks* n = new xresloader_datablocks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void xresloader_datablocks::Clear() {
// @@protoc_insertion_point(message_clear_start:com.owent.xresloader.pb.xresloader_datablocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_block_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  _internal_metadata_.Clear();
}

bool xresloader_datablocks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.owent.xresloader.pb.xresloader_datablocks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .com.owent.xresloader.pb.xresloader_header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes data_block = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_data_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.owent.xresloader.pb.xresloader_datablocks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.owent.xresloader.pb.xresloader_datablocks)
  return false;
#undef DO_
}

void xresloader_datablocks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.owent.xresloader.pb.xresloader_datablocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.owent.xresloader.pb.xresloader_header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated bytes data_block = 2;
  for (int i = 0, n = this->data_block_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->data_block(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:com.owent.xresloader.pb.xresloader_datablocks)
}

::google::protobuf::uint8* xresloader_datablocks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:com.owent.xresloader.pb.xresloader_datablocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .com.owent.xresloader.pb.xresloader_header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->header_, deterministic, target);
  }

  // repeated bytes data_block = 2;
  for (int i = 0, n = this->data_block_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(2, this->data_block(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.owent.xresloader.pb.xresloader_datablocks)
  return target;
}

size_t xresloader_datablocks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.owent.xresloader.pb.xresloader_datablocks)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes data_block = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_block_size());
  for (int i = 0, n = this->data_block_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->data_block(i));
  }

  // .com.owent.xresloader.pb.xresloader_header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->header_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void xresloader_datablocks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.owent.xresloader.pb.xresloader_datablocks)
  GOOGLE_DCHECK_NE(&from, this);
  const xresloader_datablocks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const xresloader_datablocks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.owent.xresloader.pb.xresloader_datablocks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.owent.xresloader.pb.xresloader_datablocks)
    MergeFrom(*source);
  }
}

void xresloader_datablocks::MergeFrom(const xresloader_datablocks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.owent.xresloader.pb.xresloader_datablocks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_block_.MergeFrom(from.data_block_);
  if (from.has_header()) {
    mutable_header()->::com::owent::xresloader::pb::xresloader_header::MergeFrom(from.header());
  }
}

void xresloader_datablocks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.owent.xresloader.pb.xresloader_datablocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void xresloader_datablocks::CopyFrom(const xresloader_datablocks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.owent.xresloader.pb.xresloader_datablocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool xresloader_datablocks::IsInitialized() const {
  return true;
}

void xresloader_datablocks::Swap(xresloader_datablocks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void xresloader_datablocks::InternalSwap(xresloader_datablocks* other) {
  using std::swap;
  data_block_.InternalSwap(&other->data_block_);
  swap(header_, other->header_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata xresloader_datablocks::GetMetadata() const {
  protobuf_pb_5fheader_5fv3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pb_5fheader_5fv3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
}  // namespace xresloader
}  // namespace owent
}  // namespace com

// @@protoc_insertion_point(global_scope)
